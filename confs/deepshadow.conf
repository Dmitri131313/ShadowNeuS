general {
    base_exp_dir = ./exp/CASE_NAME/deepshadow
    recording = [
        ./,
        ./models
    ]
}

dataset {
    data_dir = ./public_data/DeepShadowData/CASE_NAME/
    object_bbox_min = [-0.7, -0.7, -0.7]
    object_bbox_max = [0.7, 0.7, 0.7]
    convert_linear = true
    target_radius = 0.7
    load_vis = true
    load_color = false
    n_resolution_level = 2
    dilate = false
}

train {
    learning_rate = 1e-3
    learning_rate_alpha = 0.05
    end_iter = 150000

    batch_size = 256
    light_batch_size = 4
    validate_resolution_level = 1
    warm_up_end = 5000
    anneal_end = 25000
    use_white_bkgd = False

    save_freq = 5000
    val_freq = 1250
    val_mesh_freq = 2500
    report_freq = 100

    vis_loss_type = smooth_l1
    igr_weight = 0.01
    color_weight = 0.0
    vis_weight = 1.0
    bound_weight = 100.0
    contain_weight = 100.0

    up_floor = true
    anneal_fore_iter = 5000
    anneal_fore_alpha = 0.1
}

model {
    nerf {
        D = 8,
        d_in = 4,
        d_in_view = 3,
        W = 256,
        multires = 10,
        multires_view = 4,
        output_ch = 4,
        skips=[4],
        use_viewdirs=True
    }

    sdf_network {
        d_out = 257
        d_in = 3
        d_hidden = 256
        n_layers = 8
        skip_in = [4]
        multires = 6
        bias = 0.7
        scale = 1.0
        geometric_init = True
        weight_norm = True
    }

    variance_network {
        init_val = 0.3
    }

    rendering_network {
        d_feature = 256
        mode = no_view_dir
        d_in = 6
        d_out = 3
        d_hidden = 256
        n_layers = 4
        weight_norm = True
        multires_view = 0
        squeeze_out = False # leave activation outside the code
    }

    neus_renderer {
        n_samples = 64
        n_importance = 64
        n_outside = 0
        n_near = 16
        up_sample_steps = 4     # 1 for simple coarse-to-fine sampling
        perturb = 1.0
        z_neg = -0.05
        obj_near = 0.01
        bound_r = 1.0
        use_point_light = true
    }

    sgbasis {
        nbasis = 9
        specular_rgb = true
    }

    resolution_scheduler {
        start_res = 2
        res_ckpt = [5000]
        res_val = [1]
    }
}
